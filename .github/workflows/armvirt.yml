name: passwall2-armvirt

on:
  workflow_dispatch:

env:
  REPO_SDK: https://downloads.openwrt.org/releases/21.02.5/targets/armvirt/64/openwrt-sdk-21.02.5-armvirt-64_gcc-8.4.0_musl.Linux-x86_64.tar.xz
  CONFIG: config/armvirt64.config

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Initialization enviroment
        run: |
          sudo apt update
          sudo apt install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget

      - name: Download sdk
        run: |
          wget ${REPO_SDK}
          tar xf *.tar.xz
          rm -f *.tar.xz
          mv openwrt-* openwrt
          
      - name: Get passwall2 source
        run: |
          cd openwrt/package/
          git clone https://github.com/xiaorouji/openwrt-passwall
          svn co https://github.com/xiaorouji/openwrt-passwall2/trunk/luci-app-passwall2 openwrt-passwall/luci-app-passwall2
       
#      - name: Load custom configuration
#        run: mv -f ${CONFIG} openwrt/.config
      
      - name: Updating feeds
        run: |
          cd openwrt/
          ./scripts/feeds update -a
          rm -rf feeds/packages/lang/golang
          svn co https://github.com/openwrt/packages/branches/openwrt-22.03/lang/golang feeds/packages/lang/golang
          
      - name: Installing feeds
        run: |
          cd openwrt/
          ./scripts/feeds install -a
      
      - name: Compile the passwall2 package
        run: |
          mkdir -p packed
          cd openwrt/
          make defconfig
          make package/openwrt-passwall/brook/compile -j${nproc} V=w
          find bin/ -type f -name 'brook*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/chinadns-ng/compile -j${nproc} V=w
          find bin/ -type f -name 'chinadns-ng*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/dns2socks/compile -j${nproc} V=w
          find bin/ -type f -name 'dns2socks*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/dns2tcp/compile -j${nproc} V=w
          find bin/ -type f -name 'dns2tcp*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/hysteria/compile -j${nproc} V=w
          find bin/ -type f -name 'hysteria*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/ipt2socks/compile -j${nproc} V=w
          find bin/ -type f -name 'ipt2socks*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/microsocks/compile -j${nproc} V=w
          find bin/ -type f -name 'microsocks*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/naiveproxy/compile -j${nproc} V=w
          find bin/ -type f -name 'naiveproxy*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/pdnsd-alt/compile -j${nproc} V=w
          find bin/ -type f -name 'pdnsd-alt*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/shadowsocks-rust/compile -j${nproc} V=w
          find bin/ -type f -name 'shadowsocks-rust*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/shadowsocks-libev/compile -j${nproc} V=w
          find bin/ -type f -name 'shadowsocks-libev*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/simple-obfs/compile -j${nproc} V=w
          find bin/ -type f -name 'simple-obfs*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/sing-box/compile -j${nproc} V=w
          find bin/ -type f -name 'sing-box*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/ssocks/compile -j${nproc} V=w
          find bin/ -type f -name 'ssocks*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/tcping/compile -j${nproc} V=w
          find bin/ -type f -name 'tcping*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/trojan-go/compile -j${nproc} V=w
          find bin/ -type f -name 'trojan-go*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/trojan-plus/compile -j${nproc} V=w
          find bin/ -type f -name 'trojan-plus*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/trojan/compile -j${nproc} V=w
          find bin/ -type f -name 'trojan*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/v2ray-core/compile -j${nproc} V=w
          find bin/ -type f -name 'v2ray-core*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/v2ray-geodata/compile -j${nproc} V=w
          find bin/ -type f -name 'v2ray-geodata*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/v2ray-plugin/compile -j${nproc} V=w
          find bin/ -type f -name 'v2ray-plugin*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/xray-core/compile -j${nproc} V=w
          find bin/ -type f -name 'xray-core*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/xray-plugin/compile -j${nproc} V=w
          find bin/ -type f -name 'xray-plugin*' -exec mv -t ../packed {} +
          make package/openwrt-passwall/luci-app-passwall2/compile -j${nproc} V=w
          find bin/ -type f -name 'luci-app-passwall2*' -exec mv -t ../packed {} +
         
      - name: Upload Package to Releases
        uses: ncipollo/release-action@main
        if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
        with:
          tag: 21.02.5-armvirt
          artifacts: "packed/*"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
